name: Deploy Frontend
on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Use the access token here

      - name: Build and test
        run: |
          docker build -t mpatal/react-test -f Dockerfile.dev .
          docker run -e CI=true mpatal/react-test npm test
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ca-central-1
          audience: sts.amazonaws.com

      - name: Debug OIDC Token Claims
        run: |
          IDTOKEN=$(curl -s -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value')
          echo "Subject claim: $(echo $IDTOKEN | jq -r '.sub')"
          echo "Audience claim: $(echo $IDTOKEN | jq -r '.aud')"
          echo "Issuer claim: $(echo $IDTOKEN | jq -r '.iss')"
        env:
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ steps.configure-aws-credentials.outputs.id-token-request-url }}
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ steps.configure-aws-credentials.outputs.id-token }}

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          application_name: frontend
          environment_name: frontend-env
          existing_bucket_name: elasticbeanstalk-ca-central-1-${{ secrets.AWS_ACCOUNT_ID }}
          region: ca-central-1
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
